data MVBresults;
input z return m;
datalines;
1 1 0
;
run;

data tableMVB;
set table;
 drop bmratio;
run;

%macro MVB;
%do mon=52 %to 183;
  data MVB1; set tableMVB; if &mon=m then output; run;
  proc rank data=MVB1 out=MVB2 groups=5; var Msmvosd; ranks z2; run;
  proc sort data=MVB2; by z2; run;
  proc rank data=MVB2 out=MVB3 groups=5; var ivol; ranks z1; by z2; run;
  data MVB4; set MVB3; z=z2*5+z1+1; drop z1 z2 ivol; run;
  proc sort data=MVB4; by z; run;
  proc univariate data=MVB4 noprint; var Mretwd; by z;
     output out=MVB5 mean=return;run;
  data MVB6; set MVB5; m = &mon; run;
  data MVB7;
  set MVB6;
    output;
	if z=1 then do r1=return; retain r1; end;
	if z=2 then do r2=return; retain r2; end;
	if z=3 then do r3=return; retain r3; end;
	if z=4 then do r4=return; retain r4; end;
	if z=5 then do r5=return; retain r5; 
        z=26;return=r5-r1;r26=return;retain r26;output; end;
	if z=6 then do r6=return; retain r6; end;
    if z=10 then do z=27;return=return-r6;output; end;
    if z=11 then do r11=return; retain r11; end;
    if z=15 then do z=28;return=return-r11;output; end;
	if z=16 then do r16=return; retain r16; end;
	if z=20 then do z=29; return=return-r16; output; end;
	if z=21 then do r21=return; retain r21; z=31;return=r1-return;output; end;
	if z=22 then do z=32;return=r2-return;output; end;
    if z=23 then do z=33;return=r3-return;output; end;
	if z=24 then do z=34;return=r4-return;output; end;
	if z=25 then do r25=return;retain r25;
	    z=35;return=r5-return;output; z=30;return=r25-r21;output;
		z=36;return=r26-return;output; end;
  run;
  data MVB8; set MVB7; drop r1 r2 r3 r4 r5 r6 r26 r11 r16 r21 r25; run;
  proc sort data=MVB8; by z; run;
  data MVBresults; merge MVB8 MVBresults; by m; run;
%end;
quit;
%mend MVB;
%MVB;

data MVBresults;/*用于以下三个表格*/
set MVBresults;
if m=0 then delete;
run;
proc sort data=MVBresults;
by z m;
run;

/*------------------回报率表格-------------------*/
data origin; set MVBresults; drop m; run;
proc reg data=origin outest=origin2 tableout noprint;
 by z;
 model return =;
run;
data origin3;
set origin2;
 if not(_TYPE_='PARMS' or _TYPE_='T') then delete;
 keep z intercept;
run;
data origin3;
 set origin3;
 by z;
 if first.z then intercept=intercept*100;
run;
data origin3_1; set origin3; if mod(z,5)=1 and z^=26 and z^=36; lie1=intercept;drop z intercept;run;
data origin3_2; set origin3; if mod(z,5)=2 and z^=27; lie2=intercept;drop z intercept;run;
data origin3_3; set origin3; if mod(z,5)=3 and z^=28; lie3=intercept;drop z intercept;run;
data origin3_4; set origin3; if mod(z,5)=4 and z^=29; lie4=intercept;drop z intercept;run;
data origin3_5; set origin3; if mod(z,5)=0 and z^=30; lie5=intercept;drop z intercept;run;
data origin3_6; set origin3; if z=26 or z=27 or z=28 or z=29 or z=30 or z=36;
      lie6=intercept;drop z intercept;run;
data ansorigin;
 merge origin3_1 - origin3_6;
 format lie1-lie6 6.2;
run;

/*------------------CAPM表格-------------------*/
data capm; set MVBresults; run;
proc sort data=capm; by m; run;
data capm1; merge capm factors; by m; run;
data capm2;
set capm1;
 if missing(return) then delete;
 drop smb hml umd rmw cma smb_equal hml_equal umd_equal rmw_equal cma_equal;
run;
proc sort data=capm2; by z m; run;
data capm3;
set capm2;
 return=return-rf;
 drop rf m;
run;
proc reg data=capm3 outest=capm4 tableout noprint;
model return = mkt_rf;
by z;
run;
data capm5;
set capm4;
 if not(_TYPE_='PARMS' or _TYPE_='T') then delete;
 keep z intercept;
run;
data capm6;
 set capm5;
 by z;
 if first.z then intercept=intercept*100;
run;
data capm6_1; set capm6; if mod(z,5)=1 and z^=26 and z^=36; lie1=intercept;drop z intercept;run;
data capm6_2; set capm6; if mod(z,5)=2 and z^=27; lie2=intercept;drop z intercept;run;
data capm6_3; set capm6; if mod(z,5)=3 and z^=28; lie3=intercept;drop z intercept;run;
data capm6_4; set capm6; if mod(z,5)=4 and z^=29; lie4=intercept;drop z intercept;run;
data capm6_5; set capm6; if mod(z,5)=0 and z^=30; lie5=intercept;drop z intercept;run;
data capm6_6; set capm6; if z=26 or z=27 or z=28 or z=29 or z=30 or z=36;
      lie6=intercept;drop z intercept;run;
data anscapm;
 merge capm6_1 - capm6_6;
 format lie1-lie6 6.2;
run;

/*------------------法玛三因子表格-------------------*/
data ff;set MVBresults;run;
proc sort data=ff;by m;run;
data ff1;merge ff factors;by m;run;
data ff2;set ff1;
 if missing(return) then delete;
 drop umd rmw cma smb_equal hml_equal umd_equal rmw_equal cma_equal;
run;
data ff3;set ff2;return=return-rf;drop rf;run;
proc sort data=ff3;by z m;run;

proc reg data=ff3 outest=ff4 tableout noprint;
model return = mkt_rf smb hml;
by z;
run;
data ff5; set ff4; if not(_TYPE_='PARMS' or _TYPE_='T') then delete; run;
data ff6; set ff5; keep z intercept; run;
data ff7; set ff6;
 by z; if first.z then intercept=intercept*100;
run;
data ff7_1; set ff7; if mod(z,5)=1 and z^=26 and z^=36; lie1=intercept;drop z intercept;run;
data ff7_2; set ff7; if mod(z,5)=2 and z^=27; lie2=intercept;drop z intercept;run;
data ff7_3; set ff7; if mod(z,5)=3 and z^=28; lie3=intercept;drop z intercept;run;
data ff7_4; set ff7; if mod(z,5)=4 and z^=29; lie4=intercept;drop z intercept;run;
data ff7_5; set ff7; if mod(z,5)=0 and z^=30; lie5=intercept;drop z intercept;run;
data ff7_6; set ff7; if z=26 or z=27 or z=28 or z=29 or z=30 or z=36;
      lie6=intercept;drop z intercept;run;
data ansff;
 merge ff7_1 - ff7_6;
 format lie1-lie6 6.2;
run;

data ansall;
 set ansorigin anscapm ansff;
run;
